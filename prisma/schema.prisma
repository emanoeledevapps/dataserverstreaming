// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(cuid())
  name                String
  wallet              String   @unique
  password            String?
  userType            Int      @default(0)
  createdAt           DateTime @default(now())
  geoLocation         String?
  propertyGeolocation String?
  imgProfileUrl       String?
  address             String?

  Delations   Delation[]
  Inspections Inspection[]
}

model Delation {
  id           String   @id @default(cuid())
  title        String
  testimony    String
  proofPhoto   String
  reportedUser String
  createdAt    DateTime @default(now())

  user User @relation(fields: [reportedUser], references: [wallet])
}

model Inspection {
  id                String   @id @default(cuid())
  inspectionId      String   @unique
  createdBy         String
  createdAt         String
  acceptedAt        DateTime @default(now())
  status            Int      @default(1)
  inspectedAt       String?
  propertyData      String
  resultCategories  String?
  userWallet        String
  currentLocation   String?
  resultIdices      String?
  proofPhoto        String?
  biodversityIndice String?

  user User @relation(fields: [userWallet], references: [wallet])
}

model Post {
  id          String   @id @default(cuid())
  url         String?
  title       String
  description String
  keywords    String   @default("")
  bannerUrl   String
  bannerAlt   String
  bodyPost    String
  language    String
  createdAt   DateTime @default(now())
}

model Category {
  id          String        @id @default(cuid())
  title       String        @unique
  description String
  createdAt   DateTime      @default(now())
  SubCategory SubCategory[]
}

model SubCategory {
  id          String   @id @default(cuid())
  title       String
  category    String
  carbonValue Decimal
  bioValue    Decimal
  aguaValue   Decimal
  soloValue   Decimal
  createdAt   DateTime @default(now())
  description String?
  placeholder String?
  type        String   @default("numeric")
  unity       String?
  order       Int?

  cat Category @relation(fields: [category], references: [id])
}

model Impact {
  id     String @id @default(cuid())
  title  String
  carbon Int
  agua   Int
  bio    Int
  solo   Int
}
